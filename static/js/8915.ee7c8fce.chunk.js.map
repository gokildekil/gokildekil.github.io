{"version":3,"file":"static/js/8915.ee7c8fce.chunk.js","mappings":"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","sources":["hooks/useAddPage.js","pages/permissions/Add.js"],"sourcesContent":["import { useState, useMemo } from \"react\";\r\nimport useApp from 'hooks/useApp';\r\nimport { useQueryClient, useMutation } from 'react-query';\r\nimport useApi from 'hooks/useApi';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nconst useAddPage = ({ props, formDefaultValues, afterSubmit }) => {\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst [pageReady] = useState(true);\r\n\tconst contextFormData = app.getPageFormData(props.pageName); // from data from store\r\n\tconst propsFormData = props.formData; // when form default values is passed by component props\r\n\tconst computedFormData = { ...formDefaultValues, ...propsFormData, ...contextFormData };\r\n\tconst [formData, setFormData] = useState(computedFormData);\r\n\tconst queryClient = useQueryClient();\r\n\tconst mutation = useMutation(saveFormData, {\r\n\t\tretry: false,\r\n\t\tonSuccess: (data) => {\r\n\t\t\tqueryClient.invalidateQueries(props.pageName);\r\n\t\t\tif (afterSubmit) {\r\n\t\t\t\tafterSubmit(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonError: (error) => {\r\n\t\t\tapp.showPageRequestError(error);\r\n\t\t},\r\n\t});\r\n\tfunction resetForm() {\r\n\t\tsetFormData(computedFormData);\r\n\t}\r\n\tfunction handleSubmit(e, formik) {\r\n\t\tif (!formik.isValid) {\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t}\r\n\t}\r\n\tfunction saveFormData(formValues) {\r\n\t\tconst url = props.apiPath;\r\n\t\tlet postData;\r\n\t\tif (Array.isArray(formValues)) {\r\n\t\t\tpostData = formValues.map(form => normalizeFormData(form));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpostData = normalizeFormData(formValues)\r\n\t\t}\r\n\t\treturn api.post(url, postData).then((res) => res?.data);\r\n\t}\r\n\tfunction normalizeFormData(formValues) {\r\n\t\tconst postData = { ...formValues }\r\n\t\tObject.keys(postData).forEach(function (key) {\r\n\t\t\tconst fieldValue = postData[key];\r\n\t\t\tif (Array.isArray(fieldValue)) {\r\n\t\t\t\tlet firstItem = fieldValue[0];\r\n\t\t\t\tif(firstItem && typeof firstItem == \"string\"){\r\n\t\t\t\t\tpostData[key] = fieldValue.toString();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tpostData[key] = fieldValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldValue instanceof Date) {\r\n\t\t\t\tpostData[key] = fieldValue.toISOString().slice(0, 19).replace('T', ' ');\r\n\t\t\t}\r\n\t\t\telse if(fieldValue === ''){\r\n\t\t\t\tpostData[key] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn postData;\r\n\t}\r\n\tfunction submitForm(validatedFormData) {\r\n\t\tlet confirmMsg = props.msgBeforeSave;\r\n\t\tif (confirmMsg) {\r\n\t\t\tconfirmDialog({\r\n\t\t\t\theader: props.msgTitle,\r\n\t\t\t\tmessage: confirmMsg,\r\n\t\t\t\ticon: 'pi pi-save',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\tmutation.mutate(validatedFormData);\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmutation.mutate(validatedFormData);\r\n\t\t}\r\n\t}\r\n\tfunction inputClassName(hasError, className = 'w-full') {\r\n\t\tif (hasError) {\r\n\t\t\treturn `${className} p-invalid`;\r\n\t\t}\r\n\t\treturn className;\r\n\t}\r\n\tconst pageData = {\r\n\t\tsetFormData,\r\n\t\tsubmitForm,\r\n\t\tinputClassName,\r\n\t\tresetForm,\r\n\t\thandleSubmit,\r\n\t\tformData,\r\n\t\tpageReady,\r\n\t\tsaving: mutation.isLoading,\r\n\t}\r\n\treturn useMemo(() => pageData,\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[formData, pageReady, mutation.isLoading]\r\n\t);\r\n}\r\nexport default useAddPage","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button } from 'primereact/button';\r\nimport { DataSource } from 'components/DataSource';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Title } from 'components/Title';\r\nimport useApp from 'hooks/useApp';\r\n\r\nimport useAddPage from 'hooks/useAddPage';\r\nconst PermissionsAddPage = (props) => {\r\n\t\tconst app = useApp();\r\n\t\r\n\t//form validation rules\r\n\tconst validationSchema = yup.object().shape({\r\n\t\tpermission: yup.string().required().label(\"Permission\"),\r\n\t\trole_id: yup.number().nullable().label(\"Role Id\")\r\n\t});\r\n\t\r\n\t//form default values\r\n\tconst formDefaultValues = {\r\n\t\tpermission: '', \r\n\t\trole_id: '', \r\n\t}\r\n\t\r\n\t//page hook where logics resides\r\n\tconst pageController =  useAddPage({ props, formDefaultValues, afterSubmit });\r\n\t\r\n\t// destructure and grab what the page needs\r\n\tconst { formData, resetForm, handleSubmit, submitForm, pageReady, loading, saving, inputClassName } = pageController;\r\n\t\r\n\t//event raised after form submit\r\n\tfunction afterSubmit(response){\r\n\t\tapp.flashMsg(props.msgTitle, props.msgAfterSave);\r\n\t\tresetForm();\r\n\t\tif(app.isDialogOpen()){\r\n\t\t\tapp.closeDialogs(); // if page is open as dialog, close dialog\r\n\t\t}\r\n\t\telse if(props.redirect) {\r\n\t\t\tapp.navigate(`/permissions`);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// page loading form data from api\r\n\tif(loading){\r\n\t\treturn (\r\n\t\t\t<div className=\"p-3 text-center\">\r\n\t\t\t\t<ProgressSpinner style={{width:'50px', height:'50px'}} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\t//page has loaded any required data and ready to render\r\n\tif(pageReady){\r\n\t\treturn (\r\n<main id=\"PermissionsAddPage\" className=\"main-page\">\r\n    { (props.showHeader) && \r\n    <section className=\"page-section mb-3\" >\r\n        <div className=\"container\">\r\n            <div className=\"grid align-items-center\">\r\n                { !props.isSubPage && \r\n                <div className=\"col-fixed \" >\r\n                    <Button onClick={() => app.navigate(-1)} label=\"\"  className=\"p-button p-button-text \" icon=\"pi pi-arrow-left\"  />\r\n                </div>\r\n                }\r\n                <div className=\"col \" >\r\n                    <Title title=\"Add New Permissions\"   titleClass=\"text-2xl text-primary font-bold\" subTitleClass=\"text-sm text-500\"      separator={false} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    }\r\n    <section className=\"page-section \" >\r\n        <div className=\"container\">\r\n            <div className=\"grid \">\r\n                <div className=\"md:col-9 sm:col-12 comp-grid\" >\r\n                    <div >\r\n                        <Formik initialValues={formData} validationSchema={validationSchema} onSubmit={(values, actions) =>submitForm(values)}>\r\n                            {(formik) => \r\n                            <>\r\n                            <Form className={`${!props.isSubPage ? 'card ' : ''}`}>\r\n                                <div className=\"grid\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Permission *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputText name=\"permission\"  onChange={formik.handleChange}  value={formik.values.permission}   label=\"Permission\" type=\"text\" placeholder=\"Enter Permission\"        className={inputClassName(formik?.errors?.permission)} />\r\n                                                <ErrorMessage name=\"permission\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Role Id \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/role_id_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"role_id\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.role_id} onChange={formik.handleChange} options={response} label=\"Role Id\"  placeholder=\"Select a value ...\"  className={inputClassName(formik?.errors?.role_id)}   />\r\n                                                    <ErrorMessage name=\"role_id\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                { props.showFooter && \r\n                                <div className=\"text-center my-3\">\r\n                                    <Button onClick={(e) => handleSubmit(e, formik)} className=\"p-button-primary\" type=\"submit\" label=\"Simpan\" icon=\"pi pi-send\" loading={saving} />\r\n                                </div>\r\n                                }\r\n                            </Form>\r\n                            </>\r\n                            }\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//page props and default values\r\nPermissionsAddPage.defaultProps = {\r\n\tprimaryKey: 'permission_id',\r\n\tpageName: 'permissions',\r\n\tapiPath: 'permissions/add',\r\n\trouteName: 'permissionsadd',\r\n\tsubmitButtonLabel: \"Simpan\",\r\n\tformValidationError: \"Form is invalid\",\r\n\tformValidationMsg: \"Please complete the form\",\r\n\tmsgTitle: 'Create Record',\r\n\tmsgAfterSave: \"Data Berhasil Di Simpan !\",\r\n\tmsgBeforeSave: \"\",\r\n\tshowHeader: true,\r\n\tshowFooter: true,\r\n\tredirect: true,\r\n\tisSubPage: false\r\n}\r\nexport default PermissionsAddPage;\r\n"],"names":["props","formDefaultValues","afterSubmit","app","useApp","api","useApi","useState","pageReady","contextFormData","getPageFormData","pageName","propsFormData","formData","computedFormData","setFormData","queryClient","useQueryClient","mutation","useMutation","formValues","postData","url","apiPath","Array","isArray","map","form","normalizeFormData","post","then","res","data","retry","onSuccess","invalidateQueries","onError","error","showPageRequestError","Object","keys","forEach","key","fieldValue","firstItem","toString","Date","toISOString","slice","replace","pageData","submitForm","validatedFormData","confirmMsg","msgBeforeSave","confirmDialog","header","msgTitle","message","icon","accept","mutate","reject","inputClassName","hasError","className","resetForm","handleSubmit","e","formik","isValid","flashMsg","formValidationError","formValidationMsg","saving","isLoading","useMemo","PermissionsAddPage","validationSchema","yup","shape","permission","required","label","role_id","nullable","pageController","useAddPage","response","msgAfterSave","isDialogOpen","closeDialogs","redirect","navigate","loading","style","width","height","id","showHeader","isSubPage","onClick","title","titleClass","subTitleClass","separator","initialValues","onSubmit","values","actions","name","onChange","handleChange","value","type","placeholder","errors","component","optionLabel","optionValue","options","showFooter","defaultProps","primaryKey","routeName","submitButtonLabel"],"sourceRoot":""}