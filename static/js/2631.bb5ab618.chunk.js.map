{"version":3,"file":"static/js/2631.bb5ab618.chunk.js","mappings":"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","sources":["components/PageRequestError.js","hooks/useEditPage.js","pages/account/Accountedit.js","pages/errors/Forbidden.js","pages/errors/ServerError.js"],"sourcesContent":["import PageNotFound from 'pages/errors/PageNotFound';\r\nimport Forbidden from 'pages/errors/Forbidden';\r\nimport ServerError from 'pages/errors/ServerError';\r\nconst PageRequestError = (props) => {\r\n\tconst error = props.error;\r\n\tconst { status = 500, data = \"Unable to process request.\" } = error.response;\r\n\tif(status === 404){\r\n\t\treturn <PageNotFound message={data} />\r\n\t}\r\n\telse if(status === 403){\r\n\t\treturn <Forbidden message={data} />\r\n\t}\r\n\treturn (\r\n\t\t<ServerError message={data} />\r\n\t)\r\n}\r\nexport { PageRequestError }","import { useEffect, useState, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport useApp from 'hooks/useApp';\r\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\r\nimport useApi from 'hooks/useApi';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nconst useEditPage = ({ props, formDefaultValues, afterSubmit }) => {\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst { pageid } = useParams(); // record id from url param e.g products/edit/23\r\n\tconst [currentRecord, setCurrentRecord] = useState(null);\r\n\tconst [formData, setFormData] = useState(formDefaultValues);\r\n\tconst [pageReady, setPageReady] = useState(false);\r\n\tlet recID = props.id || pageid;\r\n\trecID = recID || '';\r\n\tconst url = `${props.apiPath}/${recID}`; // set api url e.g products/edit/23\r\n\tconst { isLoading, isError, data, error } = useQuery([props.pageName, url], () => fetchFormData(), { retry: false, });\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst formValues = mapToFormData(data);\r\n\t\t\tsetFormData(formValues);\r\n\t\t\tsetCurrentRecord(data);\r\n\t\t\tsetPageReady(true);\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [data, isError]);\r\n\tfunction fetchFormData() {\r\n\t\treturn api.get(url).then((res) => res?.data);\r\n\t}\r\n\tfunction submitFormData(formValues) {\r\n\t\tconst postData = normalizeFormData(formValues);\r\n\t\treturn api.post(url, postData).then((res) => res?.data);\r\n\t}\r\n\tconst queryClient = useQueryClient();\r\n\tconst mutation = useMutation(submitFormData, {\r\n\t\tretry: false,\r\n\t\tonSuccess: (data) => {\r\n\t\t\tqueryClient.invalidateQueries(props.pageName);\r\n\t\t\tif (afterSubmit) {\r\n\t\t\t\tafterSubmit(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonError: (error) => {\r\n\t\t\tapp.showPageRequestError(error);\r\n\t\t},\r\n\t});\r\n\tfunction normalizeFormData(formValues) {\r\n\t\tconst postData = { ...formValues }\r\n\t\tObject.keys(postData).forEach(function (key) {\r\n\t\t\tconst fieldValue = postData[key];\r\n\t\t\tif (Array.isArray(fieldValue)) {\r\n\t\t\t\tlet firstItem = fieldValue[0];\r\n\t\t\t\tif(firstItem && typeof firstItem == \"string\"){\r\n\t\t\t\t\tpostData[key] = fieldValue.toString();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tpostData[key] = fieldValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldValue instanceof Date) {\r\n\t\t\t\tpostData[key] = fieldValue.toISOString().slice(0, 19).replace('T', ' ');\r\n\t\t\t}\r\n\t\t\telse if(fieldValue === ''){\r\n\t\t\t\tpostData[key] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn postData;\r\n\t}\r\n\tfunction mapToFormData(apiData) {\r\n\t\tconst formValues = { ...apiData }\r\n\t\tObject.keys(formValues).forEach(function (key) {\r\n\t\t\tconst fieldValue = formValues[key];\r\n\t\t\tconst fieldDefaultValue = formDefaultValues[key];\r\n\t\t\tif (Array.isArray(fieldDefaultValue)) {\r\n\t\t\t\tif (fieldValue) {\r\n\t\t\t\t\tformValues[key] = fieldValue.toString().split(\",\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tformValues[key] = fieldDefaultValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldDefaultValue instanceof Date  && fieldValue) {\r\n\t\t\t\tformValues[key] = new Date(fieldValue);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn formValues;\r\n\t}\r\n\tfunction handleSubmit(e, formik) {\r\n\t\tif (!formik.isValid) {\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t}\r\n\t}\r\n\tfunction submitForm(validatedFormData) {\r\n\t\tlet confirmMsg = props.msgBeforeSave;\r\n\t\tif (confirmMsg) {\r\n\t\t\tconfirmDialog({\r\n\t\t\t\theader: props.msgTitle,\r\n\t\t\t\tmessage: confirmMsg,\r\n\t\t\t\ticon: 'pi pi-save',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\tmutation.mutate(validatedFormData);\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmutation.mutate(validatedFormData);\r\n\t\t}\r\n\t}\r\n\tfunction inputClassName(hasError, className = 'w-full') {\r\n\t\tif (hasError) {\r\n\t\t\treturn `${className} p-invalid`;\r\n\t\t}\r\n\t\treturn className;\r\n\t}\r\n\tconst pageData = {\r\n\t\tcurrentRecord,\r\n\t\tformData,\r\n\t\tinputClassName,\r\n\t\tsetFormData,\r\n\t\thandleSubmit,\r\n\t\tsubmitForm,\r\n\t\tsetCurrentRecord,\r\n\t\tpageReady,\r\n\t\tsaving: mutation.isLoading,\r\n\t\tloading: isLoading,\r\n\t\tapiRequestError: error\r\n\t}\r\n\treturn useMemo(() => pageData,\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[formData, currentRecord, pageReady, mutation.isLoading, isLoading, error]\r\n\t);\r\n}\r\nexport default useEditPage;","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport { Button } from 'primereact/button';\r\nimport { DataSource } from 'components/DataSource';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { PageRequestError } from 'components/PageRequestError';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport useApp from 'hooks/useApp';\r\n\r\nimport useEditPage from 'hooks/useEditPage';\r\nconst UserAccounteditPage = (props) => {\r\n\t\tconst app = useApp();\r\n\tconst location = useLocation();\r\n\t// form validation schema\r\n\tconst validationSchema = yup.object().shape({\r\n\t\tusername: yup.string().required().label(\"Username\"),\r\n\t\tfoto_user: yup.string().required().label(\"Foto User\"),\r\n\t\ttelp: yup.string().nullable().label(\"Telp\"),\r\n\t\tuser_role_id: yup.number().nullable().label(\"User Role Id\")\r\n\t});\r\n\t// form default values\r\n\tconst formDefaultValues = {\r\n\t\tusername: '', \r\n\t\tfoto_user: '', \r\n\t\ttelp: \"NULL\", \r\n\t\tuser_role_id: '', \r\n\t}\r\n\t//where page logics resides\r\n\tconst pageController = useEditPage({ props, formDefaultValues, afterSubmit });\r\n\t//destructure and grab what we need\r\n\tconst { formData, handleSubmit, submitForm, pageReady, loading, saving, apiRequestError, inputClassName } = pageController\r\n\t//Event raised on form submit success\r\n\tfunction afterSubmit(response){\r\n\t\tapp.flashMsg(props.msgTitle, props.msgAfterSave);\r\n\t\twindow.location.reload();\r\n\t}\r\n\t// loading form data from api\r\n\tif(loading){\r\n\t\treturn (\r\n\t\t\t<div className=\"p-3 text-center\">\r\n\t\t\t\t<ProgressSpinner style={{width:'50px', height:'50px'}} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t//display error page \r\n\tif(apiRequestError){\r\n\t\treturn (\r\n\t\t\t<PageRequestError error={apiRequestError} />\r\n\t\t);\r\n\t}\r\n\t//page is ready when formdata loaded successfully\r\n\tif(pageReady){\r\n\t\treturn (\r\n<main id=\"UserAccounteditPage\" className=\"main-page\">\r\n    <section className=\"page-section \" >\r\n        <div className=\"container\">\r\n            <div className=\"grid \">\r\n                <div className=\"md:col-9 sm:col-12 comp-grid\" >\r\n                    <div >\r\n                        <Formik\r\n                            initialValues={formData}\r\n                            validationSchema={validationSchema} \r\n                            onSubmit={(values, actions) => {\r\n                            submitForm(values);\r\n                            }\r\n                            }\r\n                            >\r\n                            { (formik) => {\r\n                            return (\r\n                            <Form className={`${!props.isSubPage ? 'card ' : ''}`}>\r\n                                <div className=\"grid\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Username *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputText name=\"username\"  onChange={formik.handleChange}  value={formik.values.username}   label=\"Username\" type=\"text\" placeholder=\"Enter Username\"        className={inputClassName(formik?.errors?.username)} />\r\n                                                <ErrorMessage name=\"username\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Foto User *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputText name=\"foto_user\"  onChange={formik.handleChange}  value={formik.values.foto_user}   label=\"Foto User\" type=\"text\" placeholder=\"Enter Foto User\"        className={inputClassName(formik?.errors?.foto_user)} />\r\n                                                <ErrorMessage name=\"foto_user\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Telp \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputText name=\"telp\"  onChange={formik.handleChange}  value={formik.values.telp}   label=\"Telp\" type=\"text\" placeholder=\"Enter Telp\"        className={inputClassName(formik?.errors?.telp)} />\r\n                                                <ErrorMessage name=\"telp\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                User Role Id \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/role_id_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"user_role_id\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.user_role_id} onChange={formik.handleChange} options={response} label=\"User Role Id\"  placeholder=\"Select a value ...\"  className={inputClassName(formik?.errors?.user_role_id)}   />\r\n                                                    <ErrorMessage name=\"user_role_id\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                { props.showFooter && \r\n                                <div className=\"text-center my-3\">\r\n                                    <Button onClick={(e) => handleSubmit(e, formik)}  type=\"submit\" label=\"Perbaharui\" icon=\"pi pi-send\" loading={saving} />\r\n                                </div>\r\n                                }\r\n                            </Form>\r\n                            );\r\n                            }\r\n                            }\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n\t\t);\r\n\t}\r\n}\r\nUserAccounteditPage.defaultProps = {\r\n\tprimaryKey: 'id_user',\r\n\tpageName: 'user',\r\n\tapiPath: 'account/edit',\r\n\trouteName: 'useraccountedit',\r\n\tsubmitButtonLabel: \"Perbaharui\",\r\n\tformValidationError: \"Form is invalid\",\r\n\tformValidationMsg: \"Please complete the form\",\r\n\tmsgTitle: 'Update Record',\r\n\tmsgAfterSave: \"Data Berhasil Di Perbaharui !\",\r\n\tmsgBeforeSave: \"\",\r\n\tshowHeader: true,\r\n\tshowFooter: true,\r\n\tredirect: true,\r\n\tisSubPage: false\r\n}\r\nexport default UserAccounteditPage;\r\n","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">403</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">You do not have the necesary permisions. Please contact admins.</div>\n                <div className=\"mt-5 text-center\">\n                <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">500</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">An error occurred while processing your request. Please contact the Administrator for more information</div>\n                <div className=\"mt-5 text-center\">\n                    <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;"],"names":["PageRequestError","props","error","response","status","data","message","formDefaultValues","afterSubmit","app","useApp","api","useApi","pageid","useParams","useState","currentRecord","setCurrentRecord","formData","setFormData","pageReady","setPageReady","recID","id","url","apiPath","useQuery","pageName","get","then","res","retry","isLoading","isError","useEffect","formValues","apiData","Object","keys","forEach","key","fieldValue","fieldDefaultValue","Array","isArray","toString","split","Date","mapToFormData","queryClient","useQueryClient","mutation","useMutation","postData","firstItem","toISOString","slice","replace","normalizeFormData","post","onSuccess","invalidateQueries","onError","showPageRequestError","pageData","inputClassName","hasError","className","handleSubmit","e","formik","isValid","flashMsg","formValidationError","formValidationMsg","submitForm","validatedFormData","confirmMsg","msgBeforeSave","confirmDialog","header","msgTitle","icon","accept","mutate","reject","saving","loading","apiRequestError","useMemo","UserAccounteditPage","validationSchema","useLocation","yup","shape","username","required","label","foto_user","telp","nullable","user_role_id","pageController","useEditPage","msgAfterSave","window","location","reload","style","width","height","initialValues","onSubmit","values","actions","isSubPage","name","onChange","handleChange","value","type","placeholder","errors","component","optionLabel","optionValue","options","showFooter","onClick","defaultProps","primaryKey","routeName","submitButtonLabel","showHeader","redirect","PageNotFound","size","navigate"],"sourceRoot":""}