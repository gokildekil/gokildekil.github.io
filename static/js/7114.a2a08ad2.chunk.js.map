{"version":3,"file":"static/js/7114.a2a08ad2.chunk.js","mappings":"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","sources":["components/CheckDuplicate.js","components/PageRequestError.js","components/Uploader.js","hooks/useEditPage.js","pages/errors/Forbidden.js","pages/errors/ServerError.js","pages/user/Edit.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport useApi from 'hooks/useApi';\r\nconst CheckDuplicate = (props) => {\r\n\tconst [exist, setExist] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst api = useApi();\r\n\t\r\n\tconst { apiPath, value } = props;\r\n\tasync function check() {\r\n\t\tconst val = encodeURIComponent(value.trim());;\r\n\t\tif (val) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst result = await api.get(`${apiPath}/${val}`);\r\n\t\t\tif(result?.data.toString() === 'true'){\r\n\t\t\t\tsetExist(true)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetExist(false)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}\r\n\treturn props.children({ loading, check, exist });\r\n}\r\n\r\nexport { CheckDuplicate }","import PageNotFound from 'pages/errors/PageNotFound';\r\nimport Forbidden from 'pages/errors/Forbidden';\r\nimport ServerError from 'pages/errors/ServerError';\r\nconst PageRequestError = (props) => {\r\n\tconst error = props.error;\r\n\tconst { status = 500, data = \"Unable to process request.\" } = error.response;\r\n\tif(status === 404){\r\n\t\treturn <PageNotFound message={data} />\r\n\t}\r\n\telse if(status === 403){\r\n\t\treturn <Forbidden message={data} />\r\n\t}\r\n\treturn (\r\n\t\t<ServerError message={data} />\r\n\t)\r\n}\r\nexport { PageRequestError }","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Button } from 'primereact/button';\r\nimport useUtils from 'hooks/useUtils';\r\nimport useLocalStore from 'hooks/useLocalStore';\r\nimport useApi from 'hooks/useApi';\r\nimport { ImageViewer } from \"./ImageViewer\";\r\n\r\n\r\n\r\nconst Uploader = (props) => {\r\n\r\n\tconst utils = useUtils();\r\n\tconst api = useApi();\r\n\tconst localStore = useLocalStore();\r\n\r\n\tconst fileUploadRef = useRef(null);\r\n\r\n\tconst [uploadedFilePaths, setUploadedFilePaths] = useState([]);\r\n\tconst [uploadedFiles, setUploadedFiles] = useState([]);\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.value) {\r\n\t\t\tlet prevUploadPaths = props.value.toString().split(',');\r\n\t\t\tsetUploadedFilePaths(prevUploadPaths);\r\n\t\t}\r\n\t}, [props.value]);\r\n\r\n\tconst maxFileSize = props.maxFileSize || 10;// in mb\r\n\tconst fileLimit = props.fileLimit || 10;\r\n\tconst multiple = props.multiple;\r\n\tconst accept = props.accept;\r\n\r\n\tconst maxFileSizeInBytes = maxFileSize * 1024 * 1024;\r\n\r\n\tfunction buildUploadedFiles() {\r\n\t\tlet files = [];\r\n\t\tuploadedFilePaths.forEach(path => {\r\n\t\t\tlet fileName = path.split('\\\\').pop().split('/').pop();\r\n\t\t\tlet ext = fileName.split('.').pop().toLowerCase();\r\n\t\t\tlet imgExt = ['jpg', 'png', 'gif', 'jpeg', 'bmp'];\r\n\t\t\tlet isImage = false;\r\n\t\t\tif (imgExt.indexOf(ext) > -1) {\r\n\t\t\t\tisImage = true;\r\n\t\t\t}\r\n\t\t\tlet size = \"small\"; //use resize image for the display\r\n\t\t\tif (path.indexOf(\"temp/\") > -1) {\r\n\t\t\t\tsize = \"\";  //if image is still in temp folder use the original image\r\n\t\t\t}\r\n\t\t\tlet fileShortName = utils.strEllipsis(fileName, 15);\r\n\t\t\tfiles.push({\r\n\t\t\t\tname: fileName,\r\n\t\t\t\tshortName: fileShortName,\r\n\t\t\t\tisImage: isImage,\r\n\t\t\t\tsize: size,\r\n\t\t\t\tpath: path\r\n\t\t\t})\r\n\t\t});\r\n\t\tsetUploadedFiles(files);\r\n\t}\r\n\r\n\tfunction getUploadApiUrl() {\r\n\t\treturn utils.setApiPath(props.uploadPath);\r\n\t}\r\n\tfunction setheaders(event) {\r\n\t\tconst token = localStore.getToken();\r\n\t\tevent.xhr.setRequestHeader(\"Authorization\", `Bearer ${token}`);\r\n\t}\r\n\tfunction uploadComplete(event) {\r\n\t\tconst response = event.xhr.response;\r\n\t\tuploadedFilePaths.push(response);\r\n\t\tsetUploadedFilePaths(uploadedFilePaths);\r\n\t\tupdateModelValue();\r\n\t\tprops.onUploadCompleted(response);\r\n\t}\r\n\r\n\tfunction updateModelValue() {\r\n\t\tprops.onChange(uploadedFilePaths.toString());\r\n\t}\r\n\r\n\tasync function removeFile(file) {\r\n\t\ttry {\r\n\t\t\tlet index = uploadedFilePaths.indexOf(file.path);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tuploadedFilePaths.splice(index, 1);\r\n\t\t\t\tsetUploadedFilePaths(uploadedFilePaths);\r\n\t\t\t\tbuildUploadedFiles();\r\n\t\t\t\tupdateModelValue();\r\n\t\t\t\tlet url = \"fileuploader/remove_temp_file\";\r\n\t\t\t\tlet formData = {\r\n\t\t\t\t\ttemp_file: file.path\r\n\t\t\t\t}\r\n\t\t\t\tawait api.post(url, formData)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction uploadError(req) {\r\n\t\tconst errMsg = req?.xhr?.response || \"Unable to upload file\";\r\n\t\tprops.onUploadError(errMsg);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tbuildUploadedFiles();\r\n\t\tif (uploadedFilePaths.length >= fileLimit) {\r\n\t\t\tsetDisabled(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetDisabled(false)\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [uploadedFilePaths, uploadedFilePaths.length, fileLimit]);\r\n\r\n\tfunction UploadedItemsTemplate() {\r\n\t\tif (props.showUploadedFiles) {\r\n\t\t\tif (uploadedFiles.length) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"flex gap-2 flex-wrap py-2\">\r\n\t\t\t\t\t\t{uploadedFiles.map(file =>\r\n\t\t\t\t\t\t\t<div key={file.path}>\r\n\t\t\t\t\t\t\t\t{file.isImage && <div className=\"card flex justify-content-between gap-2 align-items-center p-1\">\r\n\t\t\t\t\t\t\t\t\t<ImageViewer width=\"40px\" height=\"40px\" imageSize=\"small\" src={file.path} />\r\n\t\t\t\t\t\t\t\t\t<Button type=\"button\" className=\"p-button-danger p-button-sm p-button-text\" onClick={() => removeFile(file)} icon=\"pi pi-times\" />\r\n\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t{!file.isImage && <div className=\"flex card p-1 gap-2 justify-content-between align-items-center p-1\">\r\n\t\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noreferrer\" href={utils.getFileFullPath(file.path)}>\r\n\t\t\t\t\t\t\t\t\t\t<Avatar size=\"large\" icon=\"pi pi-file\" />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-sm text-500\">{file.shortName}</span>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"button\" className=\"p-button-danger p-button-sm p-button-text\" onClick={() => removeFile(file)} icon=\"pi pi-times\" />\r\n\t\t\t\t\t\t\t\t</div >}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div >\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst emptyTemplate = () => {\r\n        return (\r\n            <div className=\"flex justify-content-center align-items-center gap-3 text-500\">\r\n                <i className=\"pi pi-upload text-5xl\"></i>\r\n                <span className=\"font-bold\">{ props.label }</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className=\"p-2 surface-200\">\r\n\t\t\t<FileUpload\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tname=\"file\"\r\n\t\t\t\tref={fileUploadRef}\r\n\t\t\t\tauto={true}\r\n\t\t\t\tmaxFileSize={maxFileSizeInBytes}\r\n\t\t\t\taccept={accept}\r\n\t\t\t\tmultiple={multiple}\r\n\t\t\t\tmode=\"advanced\"\r\n\t\t\t\turl={getUploadApiUrl()}\r\n\t\t\t\tonBeforeSend={setheaders}\r\n\t\t\t\tonUpload={uploadComplete}\r\n\t\t\t\tonError={uploadError}\r\n\t\t\t\temptyTemplate={emptyTemplate}\r\n\t\t\t\t>\r\n\t\t\t</FileUpload>\r\n\t\t\t<UploadedItemsTemplate />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nUploader.defaultProps = {\r\n\tonChange: () => { },\r\n\tonUploadCompleted: () => { },\r\n\tonUploadError: () => { },\r\n}\r\n\r\nexport { Uploader }","import { useEffect, useState, useMemo } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport useApp from 'hooks/useApp';\r\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\r\nimport useApi from 'hooks/useApi';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nconst useEditPage = ({ props, formDefaultValues, afterSubmit }) => {\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst { pageid } = useParams(); // record id from url param e.g products/edit/23\r\n\tconst [currentRecord, setCurrentRecord] = useState(null);\r\n\tconst [formData, setFormData] = useState(formDefaultValues);\r\n\tconst [pageReady, setPageReady] = useState(false);\r\n\tlet recID = props.id || pageid;\r\n\trecID = recID || '';\r\n\tconst url = `${props.apiPath}/${recID}`; // set api url e.g products/edit/23\r\n\tconst { isLoading, isError, data, error } = useQuery([props.pageName, url], () => fetchFormData(), { retry: false, });\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst formValues = mapToFormData(data);\r\n\t\t\tsetFormData(formValues);\r\n\t\t\tsetCurrentRecord(data);\r\n\t\t\tsetPageReady(true);\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [data, isError]);\r\n\tfunction fetchFormData() {\r\n\t\treturn api.get(url).then((res) => res?.data);\r\n\t}\r\n\tfunction submitFormData(formValues) {\r\n\t\tconst postData = normalizeFormData(formValues);\r\n\t\treturn api.post(url, postData).then((res) => res?.data);\r\n\t}\r\n\tconst queryClient = useQueryClient();\r\n\tconst mutation = useMutation(submitFormData, {\r\n\t\tretry: false,\r\n\t\tonSuccess: (data) => {\r\n\t\t\tqueryClient.invalidateQueries(props.pageName);\r\n\t\t\tif (afterSubmit) {\r\n\t\t\t\tafterSubmit(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonError: (error) => {\r\n\t\t\tapp.showPageRequestError(error);\r\n\t\t},\r\n\t});\r\n\tfunction normalizeFormData(formValues) {\r\n\t\tconst postData = { ...formValues }\r\n\t\tObject.keys(postData).forEach(function (key) {\r\n\t\t\tconst fieldValue = postData[key];\r\n\t\t\tif (Array.isArray(fieldValue)) {\r\n\t\t\t\tlet firstItem = fieldValue[0];\r\n\t\t\t\tif(firstItem && typeof firstItem == \"string\"){\r\n\t\t\t\t\tpostData[key] = fieldValue.toString();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tpostData[key] = fieldValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldValue instanceof Date) {\r\n\t\t\t\tpostData[key] = fieldValue.toISOString().slice(0, 19).replace('T', ' ');\r\n\t\t\t}\r\n\t\t\telse if(fieldValue === ''){\r\n\t\t\t\tpostData[key] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn postData;\r\n\t}\r\n\tfunction mapToFormData(apiData) {\r\n\t\tconst formValues = { ...apiData }\r\n\t\tObject.keys(formValues).forEach(function (key) {\r\n\t\t\tconst fieldValue = formValues[key];\r\n\t\t\tconst fieldDefaultValue = formDefaultValues[key];\r\n\t\t\tif (Array.isArray(fieldDefaultValue)) {\r\n\t\t\t\tif (fieldValue) {\r\n\t\t\t\t\tformValues[key] = fieldValue.toString().split(\",\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tformValues[key] = fieldDefaultValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldDefaultValue instanceof Date  && fieldValue) {\r\n\t\t\t\tformValues[key] = new Date(fieldValue);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn formValues;\r\n\t}\r\n\tfunction handleSubmit(e, formik) {\r\n\t\tif (!formik.isValid) {\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t}\r\n\t}\r\n\tfunction submitForm(validatedFormData) {\r\n\t\tlet confirmMsg = props.msgBeforeSave;\r\n\t\tif (confirmMsg) {\r\n\t\t\tconfirmDialog({\r\n\t\t\t\theader: props.msgTitle,\r\n\t\t\t\tmessage: confirmMsg,\r\n\t\t\t\ticon: 'pi pi-save',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\tmutation.mutate(validatedFormData);\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmutation.mutate(validatedFormData);\r\n\t\t}\r\n\t}\r\n\tfunction inputClassName(hasError, className = 'w-full') {\r\n\t\tif (hasError) {\r\n\t\t\treturn `${className} p-invalid`;\r\n\t\t}\r\n\t\treturn className;\r\n\t}\r\n\tconst pageData = {\r\n\t\tcurrentRecord,\r\n\t\tformData,\r\n\t\tinputClassName,\r\n\t\tsetFormData,\r\n\t\thandleSubmit,\r\n\t\tsubmitForm,\r\n\t\tsetCurrentRecord,\r\n\t\tpageReady,\r\n\t\tsaving: mutation.isLoading,\r\n\t\tloading: isLoading,\r\n\t\tapiRequestError: error\r\n\t}\r\n\treturn useMemo(() => pageData,\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[formData, currentRecord, pageReady, mutation.isLoading, isLoading, error]\r\n\t);\r\n}\r\nexport default useEditPage;","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">403</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">You do not have the necesary permisions. Please contact admins.</div>\n                <div className=\"mt-5 text-center\">\n                <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">500</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">An error occurred while processing your request. Please contact the Administrator for more information</div>\n                <div className=\"mt-5 text-center\">\n                    <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button } from 'primereact/button';\r\nimport { CheckDuplicate } from 'components/CheckDuplicate';\r\nimport { DataSource } from 'components/DataSource';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { PageRequestError } from 'components/PageRequestError';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Title } from 'components/Title';\r\nimport { Uploader } from 'components/Uploader';\r\nimport useApp from 'hooks/useApp';\r\n\r\nimport useEditPage from 'hooks/useEditPage';\r\nconst UserEditPage = (props) => {\r\n\t\tconst app = useApp();\r\n\t// form validation schema\r\n\tconst validationSchema = yup.object().shape({\r\n\t\tusername: yup.string().required().label(\"Username\"),\r\n\t\ttelp: yup.string().nullable().label(\"Telp\"),\r\n\t\tfoto_user: yup.string().required().label(\"Foto User\"),\r\n\t\tuser_role_id: yup.number().nullable().label(\"User Role Id\")\r\n\t});\r\n\t// form default values\r\n\tconst formDefaultValues = {\r\n\t\tusername: '', \r\n\t\ttelp: \"NULL\", \r\n\t\tfoto_user: '', \r\n\t\tuser_role_id: '', \r\n\t}\r\n\t//where page logics resides\r\n\tconst pageController = useEditPage({ props, formDefaultValues, afterSubmit });\r\n\t//destructure and grab what we need\r\n\tconst { formData, handleSubmit, submitForm, pageReady, loading, saving, apiRequestError, inputClassName } = pageController\r\n\t//Event raised on form submit success\r\n\tfunction afterSubmit(response){\r\n\t\tapp.flashMsg(props.msgTitle, props.msgAfterSave);\r\n\t\tif(app.isDialogOpen()){\r\n\t\t\tapp.closeDialogs(); // if page is open as dialog, close dialog\r\n\t\t}\r\n\t\telse if(props.redirect) {\r\n\t\t\tapp.navigate(`/user`);\r\n\t\t}\r\n\t}\r\n\t// loading form data from api\r\n\tif(loading){\r\n\t\treturn (\r\n\t\t\t<div className=\"p-3 text-center\">\r\n\t\t\t\t<ProgressSpinner style={{width:'50px', height:'50px'}} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t//display error page \r\n\tif(apiRequestError){\r\n\t\treturn (\r\n\t\t\t<PageRequestError error={apiRequestError} />\r\n\t\t);\r\n\t}\r\n\t//page is ready when formdata loaded successfully\r\n\tif(pageReady){\r\n\t\treturn (\r\n<main id=\"UserEditPage\" className=\"main-page\">\r\n    { (props.showHeader) && \r\n    <section className=\"page-section mb-3\" >\r\n        <div className=\"container\">\r\n            <div className=\"grid align-items-center\">\r\n                { !props.isSubPage && \r\n                <div className=\"col-fixed \" >\r\n                    <Button onClick={() => app.navigate(-1)} label=\"\"  className=\"p-button p-button-text \" icon=\"pi pi-arrow-left\"  />\r\n                </div>\r\n                }\r\n                <div className=\"col \" >\r\n                    <Title title=\"Edit User\"   titleClass=\"text-2xl text-primary font-bold\" subTitleClass=\"text-sm text-500\"      separator={false} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    }\r\n    <section className=\"page-section \" >\r\n        <div className=\"container\">\r\n            <div className=\"grid \">\r\n                <div className=\"md:col-9 sm:col-12 comp-grid\" >\r\n                    <div >\r\n                        <Formik\r\n                            initialValues={formData}\r\n                            validationSchema={validationSchema} \r\n                            onSubmit={(values, actions) => {\r\n                            submitForm(values);\r\n                            }\r\n                            }\r\n                            >\r\n                            { (formik) => {\r\n                            return (\r\n                            <Form className={`${!props.isSubPage ? 'card ' : ''}`}>\r\n                                <div className=\"grid\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Username *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <CheckDuplicate value={formik.values.username} apiPath=\"components_data/user_username_exist\">\r\n                                                { (checker) => \r\n                                                <>\r\n                                                <InputText name=\"username\" onBlur={checker.check} onChange={formik.handleChange}  value={formik.values.username}   label=\"Username\" type=\"text\" placeholder=\"Enter Username\"        className={inputClassName(formik?.errors?.username)} />\r\n                                                <ErrorMessage name=\"username\" component=\"span\" className=\"p-error\" />\r\n                                                {(!checker.loading && checker.exist) && <small className=\"p-error\">Not available</small>}\r\n                                                {checker.loading && <small className=\"text-500\">Checking...</small> }\r\n                                                </>\r\n                                                }\r\n                                                </CheckDuplicate>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Telp \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputText name=\"telp\"  onChange={formik.handleChange}  value={formik.values.telp}   label=\"Telp\" type=\"text\" placeholder=\"Enter Telp\"        className={inputClassName(formik?.errors?.telp)} />\r\n                                                <ErrorMessage name=\"telp\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Foto User *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <div className={inputClassName(formik?.errors?.foto_user)}>\r\n                                                    <Uploader name=\"foto_user\" showUploadedFiles value={formik.values.foto_user} uploadPath=\"fileuploader/upload/foto_user\" onChange={(paths) => formik.setFieldValue('foto_user', paths)} fileLimit={1} maxFileSize={1024} accept=\".jpg,.png,.gif,.jpeg\" multiple={false} label=\"Choose files or drop files here\" onUploadError={(errMsg) => app.flashMsg('Upload error', errMsg, 'error')} />\r\n                                                </div>\r\n                                                <ErrorMessage name=\"foto_user\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                User Role Id \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/role_id_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"user_role_id\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.user_role_id} onChange={formik.handleChange} options={response} label=\"User Role Id\"  placeholder=\"Select a value ...\"  className={inputClassName(formik?.errors?.user_role_id)}   />\r\n                                                    <ErrorMessage name=\"user_role_id\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                { props.showFooter && \r\n                                <div className=\"text-center my-3\">\r\n                                    <Button onClick={(e) => handleSubmit(e, formik)}  type=\"submit\" label=\"Perbaharui\" icon=\"pi pi-send\" loading={saving} />\r\n                                </div>\r\n                                }\r\n                            </Form>\r\n                            );\r\n                            }\r\n                            }\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n\t\t);\r\n\t}\r\n}\r\nUserEditPage.defaultProps = {\r\n\tprimaryKey: 'id_user',\r\n\tpageName: 'user',\r\n\tapiPath: 'user/edit',\r\n\trouteName: 'useredit',\r\n\tsubmitButtonLabel: \"Perbaharui\",\r\n\tformValidationError: \"Form is invalid\",\r\n\tformValidationMsg: \"Please complete the form\",\r\n\tmsgTitle: 'Update Record',\r\n\tmsgAfterSave: \"Data Berhasil Di Perbaharui !\",\r\n\tmsgBeforeSave: \"\",\r\n\tshowHeader: true,\r\n\tshowFooter: true,\r\n\tredirect: true,\r\n\tisSubPage: false\r\n}\r\nexport default UserEditPage;\r\n"],"names":["CheckDuplicate","props","useState","exist","setExist","loading","setLoading","api","useApi","apiPath","value","val","encodeURIComponent","trim","get","result","data","toString","children","check","PageRequestError","error","response","status","message","Uploader","utils","useUtils","localStore","useLocalStore","fileUploadRef","useRef","uploadedFilePaths","setUploadedFilePaths","uploadedFiles","setUploadedFiles","disabled","setDisabled","useEffect","prevUploadPaths","split","maxFileSize","fileLimit","multiple","accept","maxFileSizeInBytes","buildUploadedFiles","files","forEach","path","fileName","pop","ext","toLowerCase","isImage","indexOf","size","fileShortName","strEllipsis","push","name","shortName","updateModelValue","onChange","removeFile","file","index","splice","formData","temp_file","post","console","UploadedItemsTemplate","showUploadedFiles","length","className","map","width","height","imageSize","src","type","onClick","icon","target","rel","href","getFileFullPath","ref","auto","mode","url","setApiPath","uploadPath","onBeforeSend","event","token","getToken","xhr","setRequestHeader","onUpload","onUploadCompleted","onError","req","errMsg","onUploadError","emptyTemplate","label","defaultProps","formDefaultValues","afterSubmit","app","useApp","pageid","useParams","currentRecord","setCurrentRecord","setFormData","pageReady","setPageReady","recID","id","useQuery","pageName","then","res","retry","isLoading","isError","formValues","apiData","Object","keys","key","fieldValue","fieldDefaultValue","Array","isArray","Date","mapToFormData","queryClient","useQueryClient","mutation","useMutation","postData","firstItem","toISOString","slice","replace","normalizeFormData","onSuccess","invalidateQueries","showPageRequestError","pageData","inputClassName","hasError","handleSubmit","e","formik","isValid","flashMsg","formValidationError","formValidationMsg","submitForm","validatedFormData","confirmMsg","msgBeforeSave","confirmDialog","header","msgTitle","mutate","reject","saving","apiRequestError","useMemo","PageNotFound","navigate","UserEditPage","validationSchema","yup","shape","username","required","telp","nullable","foto_user","user_role_id","pageController","useEditPage","msgAfterSave","isDialogOpen","closeDialogs","redirect","style","showHeader","isSubPage","title","titleClass","subTitleClass","separator","initialValues","onSubmit","values","actions","checker","onBlur","handleChange","placeholder","errors","component","paths","setFieldValue","optionLabel","optionValue","options","showFooter","primaryKey","routeName","submitButtonLabel"],"sourceRoot":""}