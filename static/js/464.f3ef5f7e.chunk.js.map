{"version":3,"file":"static/js/464.f3ef5f7e.chunk.js","mappings":"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","sources":["pages/index/VerifyOtp.js"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport * as yup from 'yup';\r\nimport { Avatar } from 'primereact/avatar';\r\nimport { Button } from 'primereact/button';\r\nimport { classNames } from 'primereact/utils';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Message } from 'primereact/message';\r\nimport useApi from 'hooks/useApi';\r\nimport useApp from 'hooks/useApp';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\nimport usePostForm from 'hooks/usePostForm';\r\nexport default function VerifyOtp() {\r\n\t\tconst auth = useAuth();\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst [resending, setResending] = useState(false);\r\n\tconst [canResend, setCanResend] = useState(false);\r\n\tconst [countDown, setCountDown] = useState('');\r\n\tconst formUrl = \"/auth/validateotp\";\r\n\tconst token = searchParams.get(\"token\");\r\n\tconst formData = {\r\n\t\totp_code: \"\",\r\n\t\ttoken,\r\n\t}\r\n\tconst validationSchema = yup.object().shape({\r\n\t\totp_code: yup.string().required().label(`OTP Code`)\r\n\t});\r\n\tconst form = {\r\n\t\tformUrl, formData, validationSchema, afterSubmit\r\n\t}\r\n\tfunction afterSubmit(loginData) {\r\n\t\tif (loginData.token) {\r\n\t\t\tauth.login(loginData.token);\r\n\t\t\tapp.navigate('/home'); //user is now logged in. Navigate to home page\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapp.navigate(loginData.nextpage)\r\n\t\t}\r\n\t}\r\n\tfunction startCountDown() {\r\n\t\tlet duration = searchParams.get(\"duration\");\r\n\t\tduration = parseInt(duration) || 5; // in minutes\r\n\t\tlet minutes = 60 * duration;\r\n\t\tlet timer = minutes;\r\n\t\tlet seconds;\r\n\t\tconst interval = setInterval(function () {\r\n\t\t\tminutes = parseInt(timer / 60, 10);\r\n\t\t\tseconds = parseInt(timer % 60, 10);\r\n\t\t\tminutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\t\t\tseconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\t\t\tsetCountDown(minutes + \":\" + seconds);\r\n\t\t\tif (--timer < 0) {\r\n\t\t\t\tclearInterval(interval);\r\n\t\t\t\tsetErrorMsg(\"OTP has expired\");\r\n\t\t\t\tsetCanResend(true);\r\n\t\t\t}\r\n\t\t}, 1000);\r\n\t}\r\n\tasync function resendOtp() {\r\n\t\ttry{\r\n\t\t\tsetResending(true);\r\n\t\t\tsetErrorMsg(null);\r\n\t\t\tawait api.post('/auth/resendotp', formData);\r\n\t\t\tsetCanResend(false);\r\n\t\t\tstartCountDown();\r\n\t\t\tapp.flashMsg('Success', 'OTP Sent Successfully', 'success');\r\n\t\t}\r\n\t\tcatch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t\tconst msg = error?.response?.data || \"Unable to resend otp\";\r\n\t\t\tapp.flashMsg('Failed', msg, 'error');\r\n\t\t}\r\n\t\tfinally{\r\n\t\t\tsetResending(false);\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tstartCountDown();\r\n\t}, [token]);\r\n\tconst { loading, errorMsg, setErrorMsg, formik, getFieldError, getErrorClass } = usePostForm(form);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"grid justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-12 md:col-5\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"grid align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-2\">\r\n\t\t\t\t\t\t\t\t\t\t<Avatar className=\"bg-green-500 text-white\" icon=\"pi pi-check-circle\" size=\"large\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-2xl font-bold\">OTP Verification</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-2xl font-bold text-info\">{countDown}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"text-primary\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t\t<div className=\"grid justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t<InputText name=\"otp_code\" id=\"otp_code\" className={classNames('w-full text-center otp-input', getErrorClass('otp_code'))} placeholder=\"Enter OTP\" value={formik.values.otpCode} onChange={formik.handleChange} type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t\t{getFieldError('otp_code')}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-3 tetx-right\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"p-button-lg\" loading={loading} type=\"submit\" label=\"Verify\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{ errorMsg && <Message severity=\"error\" text={errorMsg} />}\r\n\t\t\t\t\t\t\t\t<div className=\"flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-sm text-500\">\r\n\t\t\t\t\t\t\t\t\t\tDidn't receive an OTP ?\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"p-button-text\" disabled={!canResend} loading={resending} onClick={()=>resendOtp()} type=\"button\" label=\"Resend...\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<style>\r\n\t\t\t\t{\r\n\t\t\t\t`\r\n\t\t\t\t.otp-input {\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t\tfont-size: 20px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tletter-spacing: 10px;\r\n\t\t\t\t}\r\n\t\t\t\t.otp-input::placeholder {\r\n\t\t\t\t\tfont-weight: normal;\r\n\t\t\t\t\tfont-size: 14px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tletter-spacing: 1px;\r\n\t\t\t\t}\r\n\t\t\t\t`\r\n\t\t\t}\r\n\t\t\t</style>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"names":["VerifyOtp","auth","useAuth","app","useApp","api","useApi","useSearchParams","searchParams","useState","resending","setResending","canResend","setCanResend","countDown","setCountDown","token","get","formData","otp_code","validationSchema","yup","shape","required","label","form","formUrl","afterSubmit","loginData","login","navigate","nextpage","startCountDown","seconds","duration","minutes","parseInt","timer","interval","setInterval","clearInterval","setErrorMsg","post","flashMsg","console","log","msg","response","data","useEffect","usePostForm","loading","errorMsg","formik","getFieldError","getErrorClass","className","icon","size","onSubmit","handleSubmit","name","id","classNames","placeholder","value","values","otpCode","onChange","handleChange","type","severity","text","disabled","onClick","resendOtp"],"sourceRoot":""}