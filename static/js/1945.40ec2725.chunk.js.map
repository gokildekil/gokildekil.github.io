{"version":3,"file":"static/js/1945.40ec2725.chunk.js","mappings":"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","sources":["hooks/useAddPage.js","pages/kbm_guru/Add.js","../node_modules/primereact/inputtextarea/inputtextarea.esm.js"],"sourcesContent":["import { useState, useMemo } from \"react\";\r\nimport useApp from 'hooks/useApp';\r\nimport { useQueryClient, useMutation } from 'react-query';\r\nimport useApi from 'hooks/useApi';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nconst useAddPage = ({ props, formDefaultValues, afterSubmit }) => {\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst [pageReady] = useState(true);\r\n\tconst contextFormData = app.getPageFormData(props.pageName); // from data from store\r\n\tconst propsFormData = props.formData; // when form default values is passed by component props\r\n\tconst computedFormData = { ...formDefaultValues, ...propsFormData, ...contextFormData };\r\n\tconst [formData, setFormData] = useState(computedFormData);\r\n\tconst queryClient = useQueryClient();\r\n\tconst mutation = useMutation(saveFormData, {\r\n\t\tretry: false,\r\n\t\tonSuccess: (data) => {\r\n\t\t\tqueryClient.invalidateQueries(props.pageName);\r\n\t\t\tif (afterSubmit) {\r\n\t\t\t\tafterSubmit(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonError: (error) => {\r\n\t\t\tapp.showPageRequestError(error);\r\n\t\t},\r\n\t});\r\n\tfunction resetForm() {\r\n\t\tsetFormData(computedFormData);\r\n\t}\r\n\tfunction handleSubmit(e, formik) {\r\n\t\tif (!formik.isValid) {\r\n\t\t\tapp.flashMsg(props.formValidationError, props.formValidationMsg, \"error\");\r\n\t\t}\r\n\t}\r\n\tfunction saveFormData(formValues) {\r\n\t\tconst url = props.apiPath;\r\n\t\tlet postData;\r\n\t\tif (Array.isArray(formValues)) {\r\n\t\t\tpostData = formValues.map(form => normalizeFormData(form));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpostData = normalizeFormData(formValues)\r\n\t\t}\r\n\t\treturn api.post(url, postData).then((res) => res?.data);\r\n\t}\r\n\tfunction normalizeFormData(formValues) {\r\n\t\tconst postData = { ...formValues }\r\n\t\tObject.keys(postData).forEach(function (key) {\r\n\t\t\tconst fieldValue = postData[key];\r\n\t\t\tif (Array.isArray(fieldValue)) {\r\n\t\t\t\tlet firstItem = fieldValue[0];\r\n\t\t\t\tif(firstItem && typeof firstItem == \"string\"){\r\n\t\t\t\t\tpostData[key] = fieldValue.toString();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tpostData[key] = fieldValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fieldValue instanceof Date) {\r\n\t\t\t\tpostData[key] = fieldValue.toISOString().slice(0, 19).replace('T', ' ');\r\n\t\t\t}\r\n\t\t\telse if(fieldValue === ''){\r\n\t\t\t\tpostData[key] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn postData;\r\n\t}\r\n\tfunction submitForm(validatedFormData) {\r\n\t\tlet confirmMsg = props.msgBeforeSave;\r\n\t\tif (confirmMsg) {\r\n\t\t\tconfirmDialog({\r\n\t\t\t\theader: props.msgTitle,\r\n\t\t\t\tmessage: confirmMsg,\r\n\t\t\t\ticon: 'pi pi-save',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\tmutation.mutate(validatedFormData);\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmutation.mutate(validatedFormData);\r\n\t\t}\r\n\t}\r\n\tfunction inputClassName(hasError, className = 'w-full') {\r\n\t\tif (hasError) {\r\n\t\t\treturn `${className} p-invalid`;\r\n\t\t}\r\n\t\treturn className;\r\n\t}\r\n\tconst pageData = {\r\n\t\tsetFormData,\r\n\t\tsubmitForm,\r\n\t\tinputClassName,\r\n\t\tresetForm,\r\n\t\thandleSubmit,\r\n\t\tformData,\r\n\t\tpageReady,\r\n\t\tsaving: mutation.isLoading,\r\n\t}\r\n\treturn useMemo(() => pageData,\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[formData, pageReady, mutation.isLoading]\r\n\t);\r\n}\r\nexport default useAddPage","import { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { DataSource } from 'components/DataSource';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Title } from 'components/Title';\r\nimport useApp from 'hooks/useApp';\r\n\r\nimport useAddPage from 'hooks/useAddPage';\r\nconst KbmGuruAddPage = (props) => {\r\n\t\tconst app = useApp();\r\n\t\r\n\t//form validation rules\r\n\tconst validationSchema = yup.object().shape({\r\n\t\ttanggal: yup.string().nullable().label(\"Tanggal\"),\r\n\t\tnama: yup.string().required().label(\"Nama Guru\"),\r\n\t\tbidang_study: yup.string().required().label(\"Mata Pelajaran\"),\r\n\t\tkelas: yup.string().required().label(\"Kelas\"),\r\n\t\tjurusan: yup.string().required().label(\"Jurusan\"),\r\n\t\tjam_ke: yup.string().required().label(\"Jam Mengajar Ke\"),\r\n\t\tkehadiran: yup.array().min(1).label(\"Kehadiran\"),\r\n\t\tketerangan: yup.string().nullable().label(\"Keterangan\")\r\n\t});\r\n\t\r\n\t//form default values\r\n\tconst formDefaultValues = {\r\n\t\ttanggal: \"NULL\", \r\n\t\tnama: '', \r\n\t\tbidang_study: '', \r\n\t\tkelas: '', \r\n\t\tjurusan: '', \r\n\t\tjam_ke: '', \r\n\t\tkehadiran: [], \r\n\t\tketerangan: '', \r\n\t}\r\n\t\r\n\t//page hook where logics resides\r\n\tconst pageController =  useAddPage({ props, formDefaultValues, afterSubmit });\r\n\t\r\n\t// destructure and grab what the page needs\r\n\tconst { formData, resetForm, handleSubmit, submitForm, pageReady, loading, saving, inputClassName } = pageController;\r\n\t\r\n\t//event raised after form submit\r\n\tfunction afterSubmit(response){\r\n\t\tapp.flashMsg(props.msgTitle, props.msgAfterSave);\r\n\t\tresetForm();\r\n\t\tif(app.isDialogOpen()){\r\n\t\t\tapp.closeDialogs(); // if page is open as dialog, close dialog\r\n\t\t}\r\n\t\telse if(props.redirect) {\r\n\t\t\tapp.navigate(`/kbm_guru`);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// page loading form data from api\r\n\tif(loading){\r\n\t\treturn (\r\n\t\t\t<div className=\"p-3 text-center\">\r\n\t\t\t\t<ProgressSpinner style={{width:'50px', height:'50px'}} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\t//page has loaded any required data and ready to render\r\n\tif(pageReady){\r\n\t\treturn (\r\n<main id=\"KbmGuruAddPage\" className=\"main-page\">\r\n    { (props.showHeader) && \r\n    <section className=\"page-section mb-3\" >\r\n        <div className=\"container\">\r\n            <div className=\"grid align-items-center\">\r\n                { !props.isSubPage && \r\n                <div className=\"col-fixed \" >\r\n                    <Button onClick={() => app.navigate(-1)} label=\"\"  className=\"p-button p-button-text \" icon=\"pi pi-arrow-left\"  />\r\n                </div>\r\n                }\r\n                <div className=\"col \" >\r\n                    <Title title=\"Form Input kbm Guru\"   titleClass=\"text-2xl text-primary font-bold\" subTitleClass=\"text-sm text-500\"      separator={false} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    }\r\n    <section className=\"page-section \" >\r\n        <div className=\"container\">\r\n            <div className=\"grid \">\r\n                <div className=\"md:col-9 sm:col-12 comp-grid\" >\r\n                    <div >\r\n                        <Formik initialValues={formData} validationSchema={validationSchema} onSubmit={(values, actions) =>submitForm(values)}>\r\n                            {(formik) => \r\n                            <>\r\n                            <Form className={`${!props.isSubPage ? 'card ' : ''}`}>\r\n                                <div className=\"grid\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Tanggal \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <Calendar name=\"tanggal\" showButtonBar className={inputClassName(formik?.errors?.tanggal)} dateFormat=\"yy-mm-dd\" value={formik.values.tanggal} onChange={formik.handleChange} showIcon        />\r\n                                                <ErrorMessage name=\"tanggal\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Nama Guru *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/nama_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"nama\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.nama} onChange={formik.handleChange} options={response} label=\"Nama Guru\"  placeholder=\"Pilih Guru\"  className={inputClassName(formik?.errors?.nama)}   />\r\n                                                    <ErrorMessage name=\"nama\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Mata Pelajaran *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/bidang_study_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"bidang_study\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.bidang_study} onChange={formik.handleChange} options={response} label=\"Mata Pelajaran\"  placeholder=\"Pilih Mata Pelajaran\"  className={inputClassName(formik?.errors?.bidang_study)}   />\r\n                                                    <ErrorMessage name=\"bidang_study\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Kelas *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/kelas_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"kelas\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.kelas} onChange={formik.handleChange} options={response} label=\"Kelas\"  placeholder=\"Pilih Kelas\"  className={inputClassName(formik?.errors?.kelas)}   />\r\n                                                    <ErrorMessage name=\"kelas\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Jurusan *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <Dropdown  name=\"jurusan\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.jurusan} onChange={formik.handleChange} options={app.menus.jurusanItems} label=\"Jurusan\"  placeholder=\"Pilih Jurusan\"  className={inputClassName(formik?.errors?.jurusan)}   />\r\n                                                <ErrorMessage name=\"jurusan\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Jam Mengajar Ke *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <DataSource   apiPath=\"components_data/jam_ke_option_list\" >\r\n                                                    {\r\n                                                    ({ response  }) => \r\n                                                    <>\r\n                                                    <Dropdown  name=\"jam_ke\"     optionLabel=\"label\" optionValue=\"value\" value={formik.values.jam_ke} onChange={formik.handleChange} options={response} label=\"Jam Mengajar Ke\"  placeholder=\"Pilh Jam Mengajar\"  className={inputClassName(formik?.errors?.jam_ke)}   />\r\n                                                    <ErrorMessage name=\"jam_ke\" component=\"span\" className=\"p-error\" />\r\n                                                    </>\r\n                                                    }\r\n                                                </DataSource>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Kehadiran *\r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                {\r\n                                                app.menus.kehadiranItems.map((option) => {\r\n                                                return (\r\n                                                <div key={option.value} className=\"field-checkbox\">\r\n                                                    <Checkbox inputId={option.value} name=\"kehadiran\" value={option.value} onChange={formik.handleChange} checked={formik.values.kehadiran.includes(option.value)} className={inputClassName(formik?.errors?.kehadiran, '')} />\r\n                                                    <label htmlFor={option.value}>{option.label}</label>\r\n                                                </div>\r\n                                                )\r\n                                                })\r\n                                                }\r\n                                                <ErrorMessage name=\"kehadiran\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"formgrid grid\">\r\n                                            <div className=\"col-12 md:col-3\">\r\n                                                Keterangan \r\n                                            </div>\r\n                                            <div className=\"col-12 md:col-9\">\r\n                                                <InputTextarea name=\"keterangan\"  className={inputClassName(formik?.errors?.keterangan)}   value={formik.values.keterangan} placeholder=\"Keterangan\" onChange={formik.handleChange}   >\r\n                                                </InputTextarea>\r\n                                                <ErrorMessage name=\"keterangan\" component=\"span\" className=\"p-error\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                { props.showFooter && \r\n                                <div className=\"text-center my-3\">\r\n                                    <Button onClick={(e) => handleSubmit(e, formik)} className=\"p-button-primary\" type=\"submit\" label=\"Simpan\" icon=\"pi pi-send\" loading={saving} />\r\n                                </div>\r\n                                }\r\n                            </Form>\r\n                            </>\r\n                            }\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//page props and default values\r\nKbmGuruAddPage.defaultProps = {\r\n\tprimaryKey: 'id_kehadiran_ajar',\r\n\tpageName: 'kbm_guru',\r\n\tapiPath: 'kbm_guru/add',\r\n\trouteName: 'kbm_guruadd',\r\n\tsubmitButtonLabel: \"Simpan\",\r\n\tformValidationError: \"Form is invalid\",\r\n\tformValidationMsg: \"Please complete the form\",\r\n\tmsgTitle: 'Create Record',\r\n\tmsgAfterSave: \"Data Berhasil Di Simpan !\",\r\n\tmsgBeforeSave: \"\",\r\n\tshowHeader: true,\r\n\tshowFooter: true,\r\n\tredirect: true,\r\n\tisSubPage: false\r\n}\r\nexport default KbmGuruAddPage;\r\n","import * as React from 'react';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, DomHandler } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar InputTextarea = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var elementRef = React.useRef(ref);\n  var cachedScrollHeight = React.useRef(0);\n\n  var onFocus = function onFocus(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onFocus && props.onFocus(event);\n  };\n\n  var onBlur = function onBlur(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onBlur && props.onBlur(event);\n  };\n\n  var onKeyUp = function onKeyUp(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onKeyUp && props.onKeyUp(event);\n  };\n\n  var onInput = function onInput(event) {\n    if (props.autoResize) {\n      resize();\n    }\n\n    props.onInput && props.onInput(event);\n    var target = event.target;\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n\n  var resize = function resize(initial) {\n    var inputEl = elementRef.current;\n\n    if (inputEl && DomHandler.isVisible(inputEl)) {\n      if (!cachedScrollHeight.current) {\n        cachedScrollHeight.current = inputEl.scrollHeight;\n        inputEl.style.overflow = 'hidden';\n      }\n\n      if (cachedScrollHeight.current !== inputEl.scrollHeight || initial) {\n        inputEl.style.height = '';\n        inputEl.style.height = inputEl.scrollHeight + 'px';\n\n        if (parseFloat(inputEl.style.height) >= parseFloat(inputEl.style.maxHeight)) {\n          inputEl.style.overflowY = 'scroll';\n          inputEl.style.height = inputEl.style.maxHeight;\n        } else {\n          inputEl.style.overflow = 'hidden';\n        }\n\n        cachedScrollHeight.current = inputEl.scrollHeight;\n      }\n    }\n  };\n\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue) || elementRef.current && ObjectUtils.isNotEmpty(elementRef.current.value);\n  }, [props.value, props.defaultValue]);\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  React.useEffect(function () {\n    if (props.autoResize) {\n      resize(true);\n    }\n  }, [props.autoResize]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var otherProps = ObjectUtils.findDiffKeys(props, InputTextarea.defaultProps);\n  var className = classNames('p-inputtextarea p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled,\n    'p-inputtextarea-resizable': props.autoResize\n  }, props.className);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    ref: elementRef\n  }, otherProps, {\n    className: className,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onInput: onInput\n  })), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions)));\n}));\nInputTextarea.displayName = 'InputTextarea';\nInputTextarea.defaultProps = {\n  __TYPE: 'InputTextarea',\n  autoResize: false,\n  tooltip: null,\n  tooltipOptions: null,\n  onInput: null\n};\n\nexport { InputTextarea };\n"],"names":["props","formDefaultValues","afterSubmit","app","useApp","api","useApi","useState","pageReady","contextFormData","getPageFormData","pageName","propsFormData","formData","computedFormData","setFormData","queryClient","useQueryClient","mutation","useMutation","formValues","postData","url","apiPath","Array","isArray","map","form","normalizeFormData","post","then","res","data","retry","onSuccess","invalidateQueries","onError","error","showPageRequestError","Object","keys","forEach","key","fieldValue","firstItem","toString","Date","toISOString","slice","replace","pageData","submitForm","validatedFormData","confirmMsg","msgBeforeSave","confirmDialog","header","msgTitle","message","icon","accept","mutate","reject","inputClassName","hasError","className","resetForm","handleSubmit","e","formik","isValid","flashMsg","formValidationError","formValidationMsg","saving","isLoading","useMemo","KbmGuruAddPage","validationSchema","yup","shape","tanggal","nullable","label","nama","required","bidang_study","kelas","jurusan","jam_ke","kehadiran","min","keterangan","pageController","useAddPage","response","msgAfterSave","isDialogOpen","closeDialogs","redirect","navigate","loading","style","width","height","id","showHeader","isSubPage","onClick","title","titleClass","subTitleClass","separator","initialValues","onSubmit","values","actions","name","showButtonBar","errors","dateFormat","value","onChange","handleChange","showIcon","component","optionLabel","optionValue","options","placeholder","menus","jurusanItems","kehadiranItems","option","inputId","checked","includes","htmlFor","showFooter","type","defaultProps","primaryKey","routeName","submitButtonLabel","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","InputTextarea","React","ref","elementRef","cachedScrollHeight","resize","initial","inputEl","current","DomHandler","scrollHeight","overflow","parseFloat","maxHeight","overflowY","isFilled","ObjectUtils","defaultValue","autoResize","hasTooltip","tooltip","otherProps","classNames","disabled","onFocus","event","onBlur","onKeyUp","onInput","Tooltip","content","tooltipOptions","displayName","__TYPE"],"sourceRoot":""}