{"version":3,"file":"static/js/1450.b244828e.chunk.js","mappings":"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","sources":["components/FilterTags.js","components/PageRequestError.js","hooks/useFilters.js","hooks/useListPage.js","pages/errors/Forbidden.js","pages/errors/ServerError.js"],"sourcesContent":["import React from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Chip } from 'primereact/chip';\r\nconst FilterTags = (props) => {\r\n\tconst { filterController, tagClassName } = props;\r\n\tconst { filters, removeFilter, filterHasValue, getFilterValue } = filterController;\r\n\tconst tagTemplate = (key, filter) => {\r\n\t\tif (filter.valueType === 'multiple' || filter.valueType === 'multiple-date') {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<span>{filter.tagTitle}:</span>\r\n\t\t\t\t\t{filter.value.map((val) =>\r\n\t\t\t\t\t\t<Chip label={getFilterValue(filter, val)} key={val} className=\"ml-2\" removable onRemove={() => removeFilter(key, val)} />)\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<span>{filter.tagTitle}:</span>\r\n\t\t\t\t\t<strong className=\"text-primary ml-2\">{getFilterValue(filter)}</strong>\r\n\t\t\t\t\t<Button onClick={() => removeFilter(key)} className=\"p-button-sm p-button-text p-button-plain\" icon=\"pi pi-times\" />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"flex flex-wrap\">\r\n\t\t\t{\r\n\t\t\t\tObject.entries(filters).map(([key, filter]) => (\r\n\t\t\t\t\t<React.Fragment key={key}>\r\n\t\t\t\t\t\t{filterHasValue(key) &&\r\n\t\t\t\t\t\t\t<div className={tagClassName}>\r\n\t\t\t\t\t\t\t\t{tagTemplate(key, filter)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFilterTags.defaultProps = {\r\n\tpageFilterController: {},\r\n\ttagClassName: 'flex card justify-content-between align-items-center surface-card pl-3 p-1 py-1 text-500 text-center mb-3 mr-2',\r\n}\r\nexport { FilterTags }","import PageNotFound from 'pages/errors/PageNotFound';\r\nimport Forbidden from 'pages/errors/Forbidden';\r\nimport ServerError from 'pages/errors/ServerError';\r\nconst PageRequestError = (props) => {\r\n\tconst error = props.error;\r\n\tconst { status = 500, data = \"Unable to process request.\" } = error.response;\r\n\tif(status === 404){\r\n\t\treturn <PageNotFound message={data} />\r\n\t}\r\n\telse if(status === 403){\r\n\t\treturn <Forbidden message={data} />\r\n\t}\r\n\treturn (\r\n\t\t<ServerError message={data} />\r\n\t)\r\n}\r\nexport { PageRequestError }","\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport useUtils from 'hooks/useUtils';\r\n\r\n\r\nconst useFilters = (schema, debounceTime = 500) => {\r\n\tconst utils = useUtils();\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst filtersQueryParam = searchParams.get(\"filters\");\r\n\tif(filtersQueryParam){\r\n\t\tconst currentPageParams = JSON.parse(decodeURIComponent(filtersQueryParam));\r\n\t\tfor (const [key, value] of Object.entries(currentPageParams)) {\r\n\t\t\tschema[key].value = value;\r\n\t\t}\r\n\t}\r\n\r\n\tconst [filters, setFilters] = useState(schema);\r\n\tconst [filterParams, setFilterParams] = useState({});\r\n\r\n\tfunction setFilterValue(field, value) {\r\n\t\tconst filter = filters[field]\r\n\t\tfilter.value = value;\r\n\t\tsetFilters(prev => ({\r\n\t\t\t...prev,\r\n\t\t\t[field]: filter\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tfunction setFilterOptions(field, options) {\r\n\t\tconst filter = filters[field]\r\n\t\tfilter.options = options;\r\n\t\tsetFilters(prev => ({\r\n\t\t\t...prev,\r\n\t\t\t[field]: filter\r\n\t\t}));\r\n\t}\r\n\r\n\tfunction computFilterValues() {\r\n\t\tconst values = []\r\n\t\tfor (const [key, filter] of Object.entries(filters)) {\r\n\t\t\tconst value = filter.value || '';\r\n\t\t\tvalues.push(value.toString());\r\n\t\t}\r\n\t\tlet v = values.join(\"\");\r\n\t\treturn v;\r\n\t}\r\n\r\n\tconst filterValues = computFilterValues();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst delayDebounceFn = setTimeout(() => {\r\n\t\t\tbuildFilterParams();\r\n\t\t}, debounceTime);\r\n\t\treturn () => clearTimeout(delayDebounceFn)\r\n\t}, [filterValues]);\r\n\r\n\t//build filter params from current filter state\r\n\tfunction buildFilterParams() {\r\n\t\tconst query = {};\r\n\t\tfor (const [key, filter] of Object.entries(filters)) {\r\n\t\t\tif (filterHasValue(key)) {\r\n\t\t\t\tif (filter.valueType === 'range') {\r\n\t\t\t\t\tquery[key] = { min: filter.value[0], max: filter.value[1] };\r\n\t\t\t\t}\r\n\t\t\t\telse if (filter.valueType === 'range-date') {\r\n\t\t\t\t\tlet fromDate = utils.formatDate(filter.value[0]);\r\n\t\t\t\t\tlet toDate = utils.formatDate(filter.value[1]);\r\n\t\t\t\t\tquery[key] = { from: fromDate, to: toDate };\r\n\t\t\t\t}\r\n\t\t\t\telse if (filter.valueType === 'multiple-date') {\r\n\t\t\t\t\tquery[key] = filter.value.map((val) => utils.formatDate(val));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tquery[key] = filter.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetFilterParams(query)\r\n\t}\r\n\r\n\tfunction removeFilter(fieldname, selectedVal) {\r\n\t\tconst filter = filters[fieldname];\r\n\t\tif (filter) {\r\n\t\t\tconst valueType = filter.valueType;\r\n\t\t\tif (valueType == 'single') {\r\n\t\t\t\tfilter.value = '';\r\n\t\t\t}\r\n\t\t\telse if (valueType === 'range') {\r\n\t\t\t\tfilter.value = null;\r\n\t\t\t}\r\n\t\t\telse if (valueType === 'range-date') {\r\n\t\t\t\tfilter.value = [];\r\n\t\t\t}\r\n\t\t\telse if (valueType === 'multiple' || valueType === 'multiple-date') {\r\n\t\t\t\tlet idx = filter.value.indexOf(selectedVal);\r\n\t\t\t\tfilter.value.splice(idx, 1);\r\n\t\t\t}\r\n\t\t\tsetFilters(prev => ({\r\n\t\t\t\t...prev,\r\n\t\t\t\t[fieldname]: filter\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterHasValue(field) {\r\n\t\tconst filter = filters[field];\r\n\t\tif (filter) {\r\n\t\t\tif (filter.valueType === 'range') {\r\n\t\t\t\treturn filter?.value?.length > 0;\r\n\t\t\t}\r\n\t\t\telse if (filter.valueType === 'range-date') {\r\n\t\t\t\tconst toDate = filter.value[1] || null;\r\n\t\t\t\tif (toDate) return true;//if second date is selected\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse if (Array.isArray(filter.value)) {\r\n\t\t\t\treturn filter.value.length > 0;\r\n\t\t\t}\r\n\t\t\telse if (filter.value) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction getFilterValue(filter, selectedVal) {\r\n\t\tif (filter) {\r\n\t\t\tif (filter.valueType === 'range' && filter.value.length) {\r\n\t\t\t\tlet min = filter.value[0];\r\n\t\t\t\tlet max = filter.value[1];\r\n\t\t\t\treturn `${min} - ${max}`;\r\n\t\t\t}\r\n\t\t\telse if (filter.valueType === 'range-date' && filter.value.length) {\r\n\t\t\t\tlet minDate = utils.humanDate(filter.value[0]);\r\n\t\t\t\tlet maxDate = utils.humanDate(filter.value[1]);\r\n\t\t\t\treturn `${minDate} - ${maxDate}`;\r\n\t\t\t}\r\n\t\t\telse if (filter.valueType === 'multiple-date') {\r\n\t\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\t\treturn utils.humanDate(val);\r\n\t\t\t}\r\n\t\t\telse if (filter.valueType === 'single-date') {\r\n\t\t\t\treturn utils.humanDate(filter.value);\r\n\t\t\t}\r\n\t\t\telse if (filter.options.length) {\r\n\t\t\t\tlet val = selectedVal || filter.value;\r\n\t\t\t\tlet selectedFilter = filter.options.find(obj => obj.value == val);\r\n\t\t\t\tif (selectedFilter) {\r\n\t\t\t\t\treturn selectedFilter.label;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (selectedVal) {\r\n\t\t\t\treturn selectedVal.toString();\r\n\t\t\t}\r\n\t\t\treturn filter.value;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\treturn {\r\n\t\tfilters,\r\n\t\tsetFilterValue,\r\n\t\tsetFilterOptions,\r\n\t\tremoveFilter,\r\n\t\tfilterHasValue,\r\n\t\tgetFilterValue,\r\n\t\tfilterParams\r\n\t}\r\n}\r\nexport default useFilters","/**\r\n * @Category React hook function\r\n * List page hook. \r\n * Provide list page state and functions\r\n * \r\n**/\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { useSearchParams, useParams, useLocation } from 'react-router-dom';\r\nimport { useQueryClient } from 'react-query';\r\nimport { useQuery } from 'react-query';\r\nimport useUtils from 'hooks/useUtils';\r\nimport { confirmDialog } from 'primereact/confirmdialog';\r\nimport useApp from 'hooks/useApp';\r\nimport useApi from 'hooks/useApi';\r\nconst useListPage = (props, filters = {}) => {\r\n\tconst app = useApp();\r\n\tconst api = useApi();\r\n\tconst utils = useUtils();\r\n\tconst queryClient = useQueryClient();\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst location = useLocation();\r\n\tlet { fieldName, fieldValue } = useParams();\r\n\tif (props.fieldName) {\r\n\t\tfieldName = props.fieldName;\r\n\t}\r\n\tif (props.fieldValue) {\r\n\t\tfieldValue = props.fieldValue;\r\n\t}\r\n\tlet currentSortBy = props.sortField;\r\n\tlet currentSortType = props.sortDir;\r\n\tlet pageNo = props.pageNo || 1;\r\n\tlet pageLimit = props.limit || 10;\r\n\t/**\r\n\t * when rendered as a sub page in another componet,\r\n\t * use state passed via props when rendered in another page as sub page\r\n\t * eg. of subpage <ProductsList isSubpage={true} orderby=\"category\" page={1} limit={5}  />\r\n\t * \r\n\t */\r\n\tif (!props.isSubPage) {\r\n\t\tcurrentSortBy = searchParams.get(\"orderby\") || currentSortBy;\r\n\t\tcurrentSortType = searchParams.get(\"ordertype\") || currentSortType;\r\n\t\tpageNo = parseInt(searchParams.get(\"page\")) || pageNo;\r\n\t\tpageLimit = parseInt(searchParams.get(\"limit\")) || pageLimit;\r\n\t}\r\n\t// compute current page offset\r\n\tconst offset = useMemo(() => (pageNo - 1) * pageLimit, [pageNo, pageLimit]);\r\n\tconst [firstRow, setFirstRow] = useState(offset);\r\n\tconst [currentPage, setCurrentPage] = useState(pageNo);\r\n\tconst [expandedRows, setExpandedRows] = useState(null);\r\n\tconst [limit, setLimit] = useState(pageLimit);\r\n\tconst [sortBy, setSortBy] = useState(currentSortBy);\r\n\tconst [sortType, setSortType] = useState(currentSortType);\r\n\tconst [sortOrder, setSortOrder] = useState(1);\r\n\tconst [pageReady, setPageReady] = useState(false);\r\n\tconst [singleSelect, setSingleSelect] = useState(true);\r\n\tconst [selectedItems, setSelectedItems] = useState([]);\r\n\tconst [records, setRecords] = useState([]);\r\n\tconst [resetRecords, setResetRecords] = useState(false);\r\n\tconst [totalPages, setTotalPages] = useState(0);\r\n\tconst [totalRecords, setTotalRecords] = useState(0);\r\n\tconst [recordCount, setRecordCount] = useState(0);\r\n\tconst filterParams = filters.filterParams;\r\n\tconst filterParamStr = utils.serializeQuery(filterParams);\r\n\tconst pageParams = { page: currentPage, limit };\r\n\tconst apiUrl = useMemo(() => buildApiUrl(),\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[filterParams, limit, currentPage, sortBy, sortType, fieldName, fieldValue]\r\n\t);\r\n\tconst cacheTime = (props.keepRecords ? 0 : 50000);\r\n\tconst { isLoading, isError, data, error } = useQuery([props.pageName, apiUrl], () => fetchRecords(), { retry: false, cacheTime });\r\n\t// compute record  position\r\n\tconst recordsPosition = useMemo(() => \r\n\t\tMath.min(currentPage * limit, totalRecords), \r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[currentPage, limit]\r\n\t);\r\n\t// check if api has reached the last record\r\n\tconst finishedLoading = (recordCount < limit && records.length > 0);\r\n\t// check if api has more data to fetch\r\n\tconst canLoadMore = (!isLoading && !finishedLoading);\r\n\tuseEffect(() => {\r\n\t\tsetCurrentPage(pageNo);\r\n\t\tsetLimit(pageLimit);\r\n\t\tsetFirstRow(offset);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [pageNo, pageLimit]);\r\n\t// this effect runs when data from api changes\r\n\tuseEffect(() => {\r\n\t\tfunction setPageData() {\r\n\t\t\tif (data) {\r\n\t\t\t\tif (data?.records) {\r\n\t\t\t\t\tif (props.keepRecords && !resetRecords) {\r\n\t\t\t\t\t\tsetRecords([...records, ...data.records]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetRecords(data.records);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTotalPages(data?.totalPages);\r\n\t\t\t\t\tsetTotalRecords(data?.totalRecords);\r\n\t\t\t\t\tsetRecordCount(data?.recordCount);\r\n\t\t\t\t\tsetResetRecords(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetRecords(data);\r\n\t\t\t\t}\r\n\t\t\t\tsetPageReady(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPageData();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [data, isError]);\r\n\t//sync current pagination and filter state with url\r\n\tuseEffect(() => {\r\n\t\t// if infinite load or  page is rendered as subpage, no need to sync state in url\r\n\t\tif (!props.isSubPage && !props.keepRecords) {\r\n\t\t\tconst currentPageParams = Object.fromEntries(new URLSearchParams(location.search));\r\n\t\t\tconst newParams = { ...currentPageParams, ...pageParams }\r\n\t\t\tif (filterParamStr) {\r\n\t\t\t\tnewParams.filters = encodeURIComponent(JSON.stringify(filterParams));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdelete newParams.filters;\r\n\t\t\t}\r\n\t\t\t//merge page current param with api param\r\n\t\t\t//let newUrl = location.pathname + '?' + utils.serializeQuery(newParams);\r\n\t\t\t//keep state in url\r\n\t\t\t//app.navigate(newUrl, { replace: false });\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [apiUrl]);\r\n\t// reset pagination state when records filters change\r\n\tuseEffect(() => {\r\n\t\tif (filterParamStr || fieldName || fieldValue) {\r\n\t\t\tresetPagination();\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [fieldName, fieldValue, filterParamStr]);\r\n\t// make axio request to the api\r\n\tfunction fetchRecords() {\r\n\t\tif (apiUrl) {\r\n\t\t\treturn api.get(apiUrl).then((res) => res?.data);\r\n\t\t}\r\n\t\treturn Promise.resolve(null);\r\n\t}\r\n\t//compute api url using current page state\r\n\tfunction buildApiUrl() {\r\n\t\tlet path = props.apiPath;\r\n\t\t//when static filter is provided\r\n\t\t// example /products/index/category/toys\r\n\t\tif (fieldName) {\r\n\t\t\tpath = path + '/' + encodeURIComponent(fieldName) + '/' + encodeURIComponent(fieldValue);\r\n\t\t}\r\n\t\tif (sortBy) {\r\n\t\t\tpageParams.orderby = sortBy;\r\n\t\t\tif (sortType) {\r\n\t\t\t\tpageParams.ordertype = sortType.toLowerCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst queryString = utils.serializeQuery({ ...pageParams, ...filterParams });\r\n\t\tif (path.includes('?')) {\r\n\t\t\treturn `${path}&${queryString}`;\r\n\t\t}\r\n\t\treturn `${path}?${queryString}`;\r\n\t}\r\n\tfunction resetPagination() {\r\n\t\tif (pageReady && currentPage > 1) {\r\n\t\t\tsetCurrentPage(1);\r\n\t\t\tsetFirstRow(0);\r\n\t\t}\r\n\t\tsetResetRecords(true); // set previous record to be cleared after fetch from api\r\n\t}\r\n\t//prime paginator component change event.\r\n\tfunction onPageChange(e) {\r\n\t\tsetFirstRow(e.first);\r\n\t\tsetLimit(e.rows);\r\n\t\tsetCurrentPage(e.page + 1);\r\n\t}\r\n\t// set next page and trigger fetch from api\r\n\tfunction setPrevPage() {\r\n\t\tsetCurrentPage(currentPage - 1);\r\n\t}\r\n\t// set next page and trigger fetch from api\r\n\tfunction setNextPage() {\r\n\t\tsetCurrentPage(currentPage + 1);\r\n\t}\r\n\t//build breadcrum menu items based on current\r\n\t// breadcrum is build only on page static filters\r\n\tfunction getPageBreadCrumbs() {\r\n\t\tconst items = [];\r\n\t\tconst filterName = searchParams.get('tag') || fieldName;\r\n\t\tif (filterName) {\r\n\t\t\titems.push({\r\n\t\t\t\tlabel: filterName,\r\n\t\t\t\ticon: 'pi pi-home',\r\n\t\t\t\tcommand: () => app.navigate(`/${props.pageName}`)\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst filterValue = searchParams.get('label') || fieldValue;\r\n\t\tif (filterValue) {\r\n\t\t\titems.push({\r\n\t\t\t\tlabel: filterValue,\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn items;\r\n\t}\r\n\t//prime datatable component sort event\r\n\tfunction onSort(event) {\r\n\t\tif (event.sortField) {\r\n\t\t\tsetSortBy(event.sortField);\r\n\t\t\tsetSortOrder(event.sortOrder)\r\n\t\t\tif (sortType === 'asc') {\r\n\t\t\t\tsetSortType('desc');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetSortType('asc');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction toggleSortType() {\r\n\t\tif (sortType === 'desc') {\r\n\t\t\tsetSortType('asc');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetSortType('desc');\r\n\t\t}\r\n\t}\r\n\t//select record and set it as the master record\r\n\tfunction setCurrentRecord(record) {\r\n\t\tsetSelectedItems([record]);\r\n\t}\r\n\tfunction expandRow(event) {\r\n\t\tconst record = event.data;\r\n\t\tsetExpandedRows(record);\r\n\t}\r\n\t// set the selected item as the current record.\r\n\tlet currentRecord = null;\r\n\tif (selectedItems.length === 1) {\r\n\t\tcurrentRecord = selectedItems[0];\r\n\t}\r\n\telse {\r\n\t\tcurrentRecord = null;\r\n\t}\r\n\t//delete single item by id or selected records\r\n\tasync function deleteItem(id) {\r\n\t\tif (id) {\r\n\t\t\tconst newRecords = [...records];\r\n\t\t\tif (Array.isArray(id)) {\r\n\t\t\t\tid = id.map(value => value[props.primaryKey]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tid = [id];\r\n\t\t\t}\r\n\t\t\tlet title = props.msgTitle;\r\n\t\t\tlet prompt = props.msgBeforeDelete;\r\n\t\t\tconfirmDialog({\r\n\t\t\t\tmessage: prompt,\r\n\t\t\t\theader: title,\r\n\t\t\t\ticon: 'pi pi-exclamation-triangle',\r\n\t\t\t\taccept: async () => {\r\n\t\t\t\t\t//callback to execute when user confirms the action\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tid.forEach((itemId) => {\r\n\t\t\t\t\t\t\tlet itemIndex = newRecords.findIndex(item => item[props.primaryKey] === itemId);\r\n\t\t\t\t\t\t\tif (itemIndex !== -1) {\r\n\t\t\t\t\t\t\t\tnewRecords.splice(itemIndex, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tsetRecords(newRecords);\r\n\t\t\t\t\t\tconst recid = encodeURIComponent(id.toString());\r\n\t\t\t\t\t\tconst url = `${props.pageName}/delete/${recid}`;\r\n\t\t\t\t\t\tawait api.get(url);\r\n\t\t\t\t\t\tqueryClient.invalidateQueries(props.pageName);\r\n\t\t\t\t\t\tapp.flashMsg(title, props.msgAfterDelete);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err) {\r\n\t\t\t\t\t\tapp.showPageRequestError(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treject: () => {\r\n\t\t\t\t\t//callback to execute when user rejects the action\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tconst pagination = {\r\n\t\ttotalRecords,\r\n\t\tcanLoadMore,\r\n\t\tfinishedLoading,\r\n\t\ttotalPages,\r\n\t\trecordsPosition,\r\n\t\trecordCount,\r\n\t\tfirstRow,\r\n\t\tcurrentPage,\r\n\t\tlimit,\r\n\t\tonPageChange,\r\n\t\tsetPrevPage,\r\n\t\tsetNextPage,\r\n\t\tlayout: 'CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\r\n\t}\r\n\tconst page = {\r\n\t\trecords,\r\n\t\tpageReady,\r\n\t\tloading: isLoading,\r\n\t\tsingleSelect,\r\n\t\tselectedItems,\r\n\t\tapiRequestError: error,\r\n\t\tapiUrl,\r\n\t\tcurrentRecord,\r\n\t\tsortBy,\r\n\t\tsortType,\r\n\t\tsortOrder,\r\n\t\texpandedRows,\r\n\t\texpandRow,\r\n\t\tsetSelectedItems,\r\n\t\tsetSingleSelect,\r\n\t\tgetPageBreadCrumbs,\r\n\t\tonSort,\r\n\t\tsetSortBy,\r\n\t\tsetSortType,\r\n\t\ttoggleSortType,\r\n\t\tdeleteItem,\r\n\t\tsetCurrentRecord,\r\n\t\tpagination,\r\n\t}\r\n\treturn useMemo(() => page,\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[records, selectedItems, isLoading, pagination, error, fieldName, fieldValue, filters]\r\n\t);\r\n}\r\nexport default useListPage;","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">403</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">You do not have the necesary permisions. Please contact admins.</div>\n                <div className=\"mt-5 text-center\">\n                <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;","import React from 'react';\nimport { Button } from 'primereact/button';\nimport { Avatar } from 'primereact/avatar';\nimport useApp from 'hooks/useApp';\nconst PageNotFound = (props) => {\n    const app = useApp()\n    return (\n        <div className=\"container\">\n            <div className=\"grid flex-column align-items-center card\">\n                <div className=\"text-pink-500 font-bold text-5xl\">500</div>\n                <Avatar size=\"xlarge\" icon=\"pi pi-lock\" className=\"text-pink-500 bg-pink-100  my-4\" />\n                <div className=\"text-900 font-medium text-3xl mb-2\">{props.message}</div>\n                <div className=\"text-gray-600\">An error occurred while processing your request. Please contact the Administrator for more information</div>\n                <div className=\"mt-5 text-center\">\n                    <Button onClick={() => app.navigate('/home')} icon=\"pi pi-arrow-left\" label=\"Home\" />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nPageNotFound.defaultProps = {\n    message: \"Access Denied\"\n}\n\n\n\nexport default PageNotFound;"],"names":["FilterTags","props","filterController","tagClassName","filters","removeFilter","filterHasValue","getFilterValue","tagTemplate","key","filter","valueType","tagTitle","value","map","val","label","className","removable","onRemove","onClick","icon","Object","entries","defaultProps","pageFilterController","PageRequestError","error","response","status","data","message","schema","debounceTime","utils","useUtils","useSearchParams","searchParams","filtersQueryParam","get","currentPageParams","JSON","parse","decodeURIComponent","useState","setFilters","filterParams","setFilterParams","setFilterValue","field","prev","setFilterOptions","options","computFilterValues","values","push","toString","join","filterValues","buildFilterParams","query","min","max","fromDate","formatDate","toDate","from","to","fieldname","selectedVal","idx","indexOf","splice","length","Array","isArray","minDate","humanDate","maxDate","selectedFilter","find","obj","useEffect","delayDebounceFn","setTimeout","clearTimeout","app","useApp","api","useApi","queryClient","useQueryClient","location","useLocation","useParams","fieldName","fieldValue","currentSortBy","sortField","currentSortType","sortDir","pageNo","pageLimit","limit","isSubPage","parseInt","offset","useMemo","firstRow","setFirstRow","currentPage","setCurrentPage","expandedRows","setExpandedRows","setLimit","sortBy","setSortBy","sortType","setSortType","sortOrder","setSortOrder","pageReady","setPageReady","singleSelect","setSingleSelect","selectedItems","setSelectedItems","records","setRecords","resetRecords","setResetRecords","totalPages","setTotalPages","totalRecords","setTotalRecords","recordCount","setRecordCount","filterParamStr","serializeQuery","pageParams","page","apiUrl","buildApiUrl","cacheTime","keepRecords","useQuery","pageName","fetchRecords","retry","isLoading","isError","recordsPosition","Math","finishedLoading","canLoadMore","then","res","Promise","resolve","path","apiPath","encodeURIComponent","orderby","ordertype","toLowerCase","queryString","includes","resetPagination","onPageChange","e","first","rows","setPrevPage","setNextPage","getPageBreadCrumbs","items","filterName","command","navigate","filterValue","onSort","event","toggleSortType","setCurrentRecord","record","expandRow","fromEntries","URLSearchParams","search","newParams","stringify","currentRecord","deleteItem","id","newRecords","primaryKey","title","msgTitle","prompt","msgBeforeDelete","confirmDialog","header","accept","forEach","itemId","itemIndex","findIndex","item","recid","url","invalidateQueries","flashMsg","msgAfterDelete","showPageRequestError","reject","pagination","layout","loading","apiRequestError","PageNotFound","size"],"sourceRoot":""}